buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
        maven {
            url = "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
        classpath "gradle.plugin.com.matthewprenger:CurseGradle:1.0.8"
        classpath "com.github.jengelman.gradle.plugins:shadow:1.2.4"
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'com.matthewprenger.cursegradle'
apply plugin: "com.github.johnrengelman.shadow"

project.ext {
    buildNum = System.getenv("CIRCLE_BUILD_NUM")
    mcVersion = "1.10.2"
    curseApiKey = System.getenv("CURSE_API_KEY") ?: ""
    curseRelease = System.getenv("CIRCLE_RELEASE_TYPE") ?: "alpha"
}

def getLastCommit = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'log', '-1', '--pretty=%B'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

version = project.ext.mcVersion + "-0.1." + project.ext.buildNum
group = "ca.glasspelican.worldhistory"
archivesBaseName = "worldHistory"

dependencies {
    compile "mysql:mysql-connector-java:6.0.6"
    compile 'com.h2database:h2:1.4.195'
    testCompile 'junit:junit:4.12'
}

sourceCompatibility = targetCompatibility = "1.7"
compileJava {
    sourceCompatibility = targetCompatibility = "1.7"
}

minecraft {
    version = "${project.ext.mcVersion}-12.18.3.2281"
    replace "@VERSION@", project.version
    replace "@BUILDNUM@", project.ext.buildNum

    runDir = "run"
    mappings = "snapshot_20161111"
}

curseforge {
    apiKey = project.ext.curseApiKey
    project {
        id = '265169'
        releaseType = project.ext.curseRelease
        changelog = getLastCommit()
        mainArtifact shadowJar
        addArtifact jar
        addArtifact sourceJar
    }
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        //include 'mcmod.info'

        // replace version and mcversion
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}